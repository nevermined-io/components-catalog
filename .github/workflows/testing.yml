# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Testing

on:
  push:
    branches: [ "main", "develop"]
  pull_request:
    branches: [ "main", "develop"]

jobs:
  unit-test-with-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "16.x"
          registry-url: https://registry.npmjs.org/
      - name: Install packages
        run: yarn install --ignore-engines
      - name: Linter
        run: yarn nx run-many --target=lint
      - name: Unit tests
        run: yarn nx run-many --target=test:unit
      - name: Build
        run: yarn nx run-many --target=build
  integration-tests-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "17.x"
          registry-url: https://registry.npmjs.org/
      - name: Install packages
        run: yarn install --ignore-engines
      - name: Run tools (network)
        run: |
          docker login -u ${{ secrets.NEVERMINED_DOCKER_USERNAME }} -p ${{ secrets.NEVERMINED_DOCKER_TOKEN}}
          sudo chmod go+r /etc/hosts
          sudo echo "127.0.0.1  nevermined-metadata" | sudo tee -a /etc/hosts
          git clone https://github.com/nevermined-io/tools
          cd tools

          export KEEPER_OWNER_ROLE_ADDRESS="0xe2DD09d719Da89e5a3D0F2549c7E24566e947260"
          rm -rf "${HOME}/.nevermined/nevermined-contracts/artifacts"

          # TODO: Use the default versions when merged into master
          export KEEPER_VERSION=v3.0.0
          export NODE_VERSION=v1.0.0
          ./start_nevermined.sh --no-graph --geth 2>&1 | tee nevermined_tools.txt &
      - name: Integration tests
        env:
          INFURA_TOKEN: ${{ secrets.INFURA_TOKEN }}
          SEED_WORDS: ${{ secrets.TEST_MNEMONIC }}
        run: yarn nx artifacts:download core && yarn nx test:integrations core
